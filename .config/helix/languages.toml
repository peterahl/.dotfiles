# --------- AI ---------

[language-server.gpt]
args = ["--logFile", "/home/peter/.cache/helix/helig-gpt.log"]
command = "helix-gpt"

# --------- BIOME ---------

[language-server.biome]
command = "biome"
args = ["lsp-proxy"]

# --------- QUTE ---------

[language-server.qute-ls]
command = "qute-ls"

[language-server.qute-ls.config.qute]
validation = { enabled = true }

# --------- JAVA ---------

[language-server.jdtls]
command = "jdtls"
args = []

[language-server.jdtls.config.java]
"jdt.ls.vmargs" = "-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx8G -Xms1G -XX:+UseG1GC -XX:+UseStringDeduplication"
"contentProvider.preferred" = "fernflower"
"signatureHelp.enabled" = true
"completion.favoriteStaticMembers" = [
  "org.junit.Assert.*",
  "org.junit.Assume.*",
  "org.junit.jupiter.api.Assertions.*",
  "org.junit.jupiter.api.Assumptions.*",
  "org.junit.jupiter.api.DynamicContainer.*",
  "org.junit.jupiter.api.DynamicTest.*",
]
"completion.importOrder" = ["java", "javax", "com", "org"]
"sources.organizeImports.starThreshold" = 9999
"sources.organizeImports.staticStarThreshold" = 9999
"codeGeneration.useBlocks" = true
"codeGeneration.generateComments" = false
"server.launchMode" = "Standard"

[[language]]
name = "java"
auto-format = true
formatter = { command = "google-java-format", args = ["-"] }
language-servers = ["jdtls", "gpt"]
# language-servers = ["qute-ls", "gpt"]

[language.debugger]
name = "java-debug"
transport = "tcp"
command = "jdb"
args = ["-attach", "localhost:5005"]
#   "-jar",
#   "/home/peter/.m2/repository/com/microsoft/java/com.microsoft.java.debug.plugin/0.53.1/com.microsoft.java.debug.plugin-0.53.1.jar",
# ]
# port-arg = "--port=5005"

# [[language.debugger.templates]]
# name = "launch"
# request = "launch"
# completion = [{ name = "main class" }]
# args = { type = "java", name = "Launch Java Program", request = "launch", mainClass = "{0}", projectName = "${workspaceFolder}" }

[[language.debugger.templates]]
name = "attach"
request = "attach"
# completion = ["port"]
# hostname = "localhost"
# port = 5005
args = { type = "java", name = "Attach to Java Process", request = "attach", hostName = "localhost", port = "5005" }


# --------- XML ---------

[language-server.lemminx]
command = "lemminx"

[[language]]
name = "xml"
auto-format = true
indent = { tab-width = 2, unit = "  " }
formatter = { command = "xmllint", args = ["--format", "-"] }
language-servers = ["lemminx"]

# --------- TOML ---------

[[language]]
name = "toml"
auto-format = true
language-servers = ["taplo", "gpt"]

# --------- Javascript/Typescript ---------

[[language]]
name = "javascript"
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
  "gpt",
]
auto-format = true

[[language]]
name = "typescript"
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
  "gpt",
]
auto-format = true

# --------- JSON ---------

[[language]]
name = "json"
language-servers = [
  { name = "vscode-json-language-server", except-features = [
    "format",
  ] },
  "biome",
  "gpt",
]

# --------- VUE ---------

[language-server.vuels]
command = "vue-language-server"
args = ["--stdio"]
config = { vue = { hybridMode = false } }

[[language]]
name = "vue"
auto-format = true
scope = "source.vue"
injection-regex = "vue"
file-types = ["vue"]
language-servers = [
  { name = "vuels", except-features = [
    "format",
  ] },
  { name = "vscode-eslint-language-server", except-features = [
    "format",
  ] },
  "gpt",
  "tailwindcss-ls",
]
formatter = { command = "eslint_d", args = ["--stdin", "--fix-to-stdout"] }
roots = ["package.json"]

# --------- Prisma ---------

[[language]]
name = "prisma"
auto-format = true
language-servers = ["prisma-language-server", "gpt"]

# --------- Go ---------

[[language]]
name = "go"
auto-format = true
language-servers = ["gopls", "golangci-lint-lsp", "gpt"]

# --------- Lua ---------

[[language]]
name = "lua"
auto-format = true

# --------- HTML ---------

[[language]]
name = "html"
language-servers = [
  "qute-ls",
  "tailwindcss-ls",
  "vscode-html-language-server",
  "gpt",
]
roots = ["pom.xml", "build.gradle", "build.gradle.kts"]

# --------- STEEL ---------

[[language]]
name = "scheme"
formatter = { command = "raco", args = ["fmt", "-i"] }
auto-format = true
language-servers = ["steel-language-server", "gpt"]

# For development
[language-server.steel-language-server]
command = "steel-language-server"
args = []

# --------- CLOJURE ---------

[language-server.clojure-lsp]
command = "clojure-lsp"
args = []

[[language]]
name = "clojure"
auto-format = true
formatter = { command = "zprint", args = ["{:style :community}"] }
language-servers = ["clojure-lsp", "gpt"]
